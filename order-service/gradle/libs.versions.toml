# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
com-fasterxml-jackson-datatype-jackson-datatype-jsr310 = "2.12.5"
com-h2database-h2 = "1.4.200"
io-micrometer-micrometer-registry-prometheus = "1.7.6"
mysql-mysql-connector-java = "8.0.27"
org-flywaydb-flyway-core = "7.7.3"
org-projectlombok-lombok = "1.18.22"
org-springdoc-springdoc-openapi-ui = "1.6.3"
org-springframework-boot-spring-boot-configuration-processor = "2.5.7"
org-springframework-boot-spring-boot-devtools = "2.5.7"
org-springframework-boot-spring-boot-starter = "2.5.7"
org-springframework-boot-spring-boot-starter-actuator = "2.5.7"
org-springframework-boot-spring-boot-starter-data-jpa = "2.5.7"
org-springframework-boot-spring-boot-starter-test = "2.5.7"
org-springframework-boot-spring-boot-starter-thymeleaf = "2.5.7"
org-springframework-boot-spring-boot-starter-validation = "2.5.7"
org-springframework-boot-spring-boot-starter-web = "2.5.7"
org-springframework-cloud-spring-cloud-sleuth-zipkin = "3.0.4"
org-springframework-cloud-spring-cloud-starter = "3.0.4"
org-springframework-cloud-spring-cloud-starter-circuitbreaker-resilience4j = "2.0.2"
org-springframework-cloud-spring-cloud-starter-config = "3.0.5"
org-springframework-cloud-spring-cloud-starter-netflix-eureka-client = "3.0.4"
org-springframework-cloud-spring-cloud-starter-sleuth = "3.0.4"
org-testcontainers-junit-jupiter = "1.16.0"
org-testcontainers-mysql = "1.16.0"

[libraries]
com-fasterxml-jackson-datatype-jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "com-fasterxml-jackson-datatype-jackson-datatype-jsr310" }
com-h2database-h2 = { module = "com.h2database:h2", version.ref = "com-h2database-h2" }
io-micrometer-micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "io-micrometer-micrometer-registry-prometheus" }
mysql-mysql-connector-java = { module = "mysql:mysql-connector-java", version.ref = "mysql-mysql-connector-java" }
org-flywaydb-flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "org-flywaydb-flyway-core" }
org-projectlombok-lombok = { module = "org.projectlombok:lombok", version.ref = "org-projectlombok-lombok" }
org-springdoc-springdoc-openapi-ui = { module = "org.springdoc:springdoc-openapi-ui", version.ref = "org-springdoc-springdoc-openapi-ui" }
org-springframework-boot-spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "org-springframework-boot-spring-boot-configuration-processor" }
org-springframework-boot-spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "org-springframework-boot-spring-boot-devtools" }
org-springframework-boot-spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "org-springframework-boot-spring-boot-starter" }
org-springframework-boot-spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "org-springframework-boot-spring-boot-starter-actuator" }
org-springframework-boot-spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "org-springframework-boot-spring-boot-starter-data-jpa" }
org-springframework-boot-spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "org-springframework-boot-spring-boot-starter-test" }
org-springframework-boot-spring-boot-starter-thymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf", version.ref = "org-springframework-boot-spring-boot-starter-thymeleaf" }
org-springframework-boot-spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "org-springframework-boot-spring-boot-starter-validation" }
org-springframework-boot-spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "org-springframework-boot-spring-boot-starter-web" }
org-springframework-cloud-spring-cloud-sleuth-zipkin = { module = "org.springframework.cloud:spring-cloud-sleuth-zipkin", version.ref = "org-springframework-cloud-spring-cloud-sleuth-zipkin" }
org-springframework-cloud-spring-cloud-starter = { module = "org.springframework.cloud:spring-cloud-starter", version.ref = "org-springframework-cloud-spring-cloud-starter" }
org-springframework-cloud-spring-cloud-starter-circuitbreaker-resilience4j = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j", version.ref = "org-springframework-cloud-spring-cloud-starter-circuitbreaker-resilience4j" }
org-springframework-cloud-spring-cloud-starter-config = { module = "org.springframework.cloud:spring-cloud-starter-config", version.ref = "org-springframework-cloud-spring-cloud-starter-config" }
org-springframework-cloud-spring-cloud-starter-netflix-eureka-client = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client", version.ref = "org-springframework-cloud-spring-cloud-starter-netflix-eureka-client" }
org-springframework-cloud-spring-cloud-starter-sleuth = { module = "org.springframework.cloud:spring-cloud-starter-sleuth", version.ref = "org-springframework-cloud-spring-cloud-starter-sleuth" }
org-testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "org-testcontainers-junit-jupiter" }
org-testcontainers-mysql = { module = "org.testcontainers:mysql", version.ref = "org-testcontainers-mysql" }
