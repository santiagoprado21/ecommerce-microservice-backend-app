plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

def lombokVersion = '1.18.26'

dependencies {
    api 'org.springframework.boot:spring-boot-starter'
    api 'org.springframework.boot:spring-boot-starter-actuator'
    api 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    api 'io.micrometer:micrometer-registry-prometheus'
    api 'org.springframework.cloud:spring-cloud-starter-sleuth-zipkin'
    api 'org.springframework.cloud:spring-cloud-starter-sleuth'
    api 'org.springframework.boot:spring-boot-configuration-processor'
    api 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    api 'org.springdoc:springdoc-openapi-ui'
    api 'org.springframework.cloud:spring-cloud-starter'
    api 'org.springframework.cloud:spring-cloud-starter-config'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'org.springframework.boot:spring-boot-starter-thymeleaf'
    api 'org.springframework.boot:spring-boot-starter-validation'
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.flywaydb:flyway-core'
    api 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'

    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
}

group = 'com.selimhorri'
version = '0.1.0'
description = 'user-service'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
